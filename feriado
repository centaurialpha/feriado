#!/usr/bin/env python3
import json
import urllib.request
import argparse
import webbrowser
from collections import namedtuple
from datetime import datetime

NOW = datetime.now()
URL = f'https://nolaborables.com.ar/api/v2/feriados/{NOW.year}'
MESES = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']
MAP_MESES = {i: mes for i, mes in zip(range(1, 13), MESES)}
Feriado = namedtuple('Feriado', 'dt info motivo tipo')


def iter_feriados(json_data):
    for each_data in json_data:
        feriado_obj = get_feriado_obj(each_data)
        yield feriado_obj


def get_feriado_obj(json_data):
    feriado_dt = datetime(NOW.year, json_data['mes'], json_data['dia'])
    feriado_obj = Feriado(
        dt=feriado_dt,
        info=json_data['info'],
        motivo=json_data['motivo'],
        tipo=json_data['tipo']
    )
    return feriado_obj


def next_feriado(json_data):
    for feriado in iter_feriados(json_data):
        if feriado.dt <= NOW:
            continue
        return feriado


def get_cli_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '-f',
        '--fecha',
        action='store_true',
        help='Muestra la fecha del feriado'
    )
    parser.add_argument(
        '-i',
        '--info',
        action='store_true',
        help='Muestra la URL a la información sobre el feriado'
    ),
    parser.add_argument(
        '--open-info',
        action='store_true',
        help='Abre la URL de la info en el navegador'
    )
    parser.add_argument(
        '-m',
        '--motivo',
        action='store_true',
        help='Muestra el motivo del feriado'
    )
    return parser


def main():
    args = get_cli_parser().parse_args()

    try:
        response = urllib.request.urlopen(URL)
    except Exception:
        print("Connection error")
    else:
        json_data = json.loads(response.read())
        feriado_obj = next_feriado(json_data)
        if feriado_obj is None:
            # Año nuevo :)
            feriado_obj = get_feriado_obj(json_data[0])

        month = MAP_MESES[feriado_obj.dt.month]

        if args.fecha:
            print(f"{feriado_obj.dt.day} {month}")
        elif args.info:
            print(f"{feriado_obj.info}")
        elif args.open_info:
            webbrowser.open_new_tab(feriado_obj.info)
        elif args.motivo:
            print(f"{feriado_obj.motivo}")

        else:
            text_template = (
                f"Próximo feriado: {feriado_obj.dt.day} {month}\n"
                f"Motivo: {feriado_obj.motivo}\n"
                f"Tipo: {feriado_obj.tipo}\n"
                f"Más información: {feriado_obj.info}"
            )
            print(text_template)


if __name__ == '__main__':
    main()
